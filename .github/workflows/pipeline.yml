name: CI/CD Pipeline

on:
  push:
    branches: 
      - '*'

jobs: 
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Build Docker Images
        run: docker-compose build

  test:
    runs-on: ubuntu-latest  

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies and run tests
      run: |
        cd backend
        npm install
        npm test
        cd ../frontend
        npm install
        npm test

  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install sshpass and openvpn
        run: |
          sudo apt update
          sudo apt --assume-yes --no-install-recommends install openvpn openvpn-systemd-resolved
          sudo apt-get --assume-yes --no-install-recommends install sshpass

      - name: Setup VPN config
        run: |
          echo "${{ secrets.VPN_CA_CRT }}" > ca.crt
          echo "${{ secrets.VPN_USER_CRT }}" > user.crt
          echo "${{ secrets.VPN_USER_KEY }}" > user.key
          echo "${{ secrets.VPN_PASSWORD }}" > secret.txt
          echo "${{ secrets.VPN_CONFIG }}" > config.ovpn
          
      - name: Connect VPN
        run: sudo openvpn --config config.ovpn --daemon --log vpn.log

      - name: Wait for a VPN connection
        timeout-minutes: 1
        run: until ping -c1 172.16.6.255; do sleep 10; done

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.DEPLOY_KEY }}" | base64 -d > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 172.16.6.255 >> ~/.ssh/known_hosts

      - name: Install rsync
        run: sudo apt --assume-yes --no-install-recommends install rsync

      - name: Copy files
        run: |
          sshpass -p 'baochau2903' rsync -avz --exclude="vpn.log" -e "ssh -i ~/.ssh/id_rsa" --exclude=".git" ./ student@172.16.6.255:~/app_folder

      - name: Stop and remove running containers
        run: |
          sshpass -p 'baochau2903' ssh -i ~/.ssh/id_rsa student@172.16.6.255 'cd ~/2023-ntran-project && yes | docker-compose down && yes | docker system prune -a'

      - name: Run docker-compose up 
        if: always()
        run: |
          sshpass -p 'pass' ssh -i ~/.ssh/id_rsa student@172.16.6.255 'cd ~/2023-ntran-project && docker-compose up -d'
          
      - name: Kill VPN connection
        if: always()
        run: | 
          sudo chmod 777 vpn.log
          sudo killall openvpn

      - name: Upload VPN logs
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: VPN logs
          path: vpn.log